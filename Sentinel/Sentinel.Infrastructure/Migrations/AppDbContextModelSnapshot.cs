// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sentinel.Infrastructure.Data;

#nullable disable

namespace Sentinel.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PapelPermissao", b =>
                {
                    b.Property<long>("PapeisId")
                        .HasColumnType("bigint")
                        .HasColumnName("papeis_id");

                    b.Property<long>("PermissoesId")
                        .HasColumnType("bigint")
                        .HasColumnName("permissoes_id");

                    b.HasKey("PapeisId", "PermissoesId")
                        .HasName("p_k_papel_permissao");

                    b.HasIndex("PermissoesId")
                        .HasDatabaseName("i_x_papel_permissao_permissoes_id");

                    b.ToTable("papel_permissao", (string)null);
                });

            modelBuilder.Entity("PapelUsuarioEmpresa", b =>
                {
                    b.Property<long>("PapeisId")
                        .HasColumnType("bigint")
                        .HasColumnName("papeis_id");

                    b.Property<long>("UsuariosEmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("usuarios_empresa_id");

                    b.HasKey("PapeisId", "UsuariosEmpresaId")
                        .HasName("p_k_papel_usuario_empresa");

                    b.HasIndex("UsuariosEmpresaId")
                        .HasDatabaseName("i_x_papel_usuario_empresa_usuarios_empresa_id");

                    b.ToTable("usuario_empresa_papel", (string)null);
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.Contrato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("criado_em");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio");

                    b.Property<long>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<long>("PlanoId")
                        .HasColumnType("bigint")
                        .HasColumnName("plano_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime>("UltimaAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_alteracao");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("p_k_contratos");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("i_x_contratos_empresa_id");

                    b.HasIndex("PlanoId")
                        .HasDatabaseName("i_x_contratos_plano_id");

                    b.ToTable("contrato", (string)null);
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("criado_em");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tenant_id");

                    b.Property<DateTime>("UltimaAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_alteracao");

                    b.HasKey("Id")
                        .HasName("p_k_empresas");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.HasIndex("TenantId")
                        .IsUnique();

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.Papel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("criado_em");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<DateTime>("UltimaAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_alteracao");

                    b.HasKey("Id")
                        .HasName("p_k_papeis");

                    b.ToTable("papel", (string)null);
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.Permissao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("acao");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("criado_em");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Recurso")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("recurso");

                    b.Property<DateTime>("UltimaAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_alteracao");

                    b.HasKey("Id")
                        .HasName("p_k_permissoes");

                    b.HasIndex("Recurso", "Acao")
                        .IsUnique();

                    b.ToTable("permissao", (string)null);
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.Plano", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("criado_em");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<DateTime>("UltimaAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_alteracao");

                    b.Property<decimal>("ValorMensal")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_mensal");

                    b.HasKey("Id")
                        .HasName("p_k_planos");

                    b.ToTable("plano", (string)null);
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.UsuarioEmpresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("criado_em");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<long>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_completo");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.Property<DateTime>("UltimaAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_alteracao");

                    b.HasKey("Id")
                        .HasName("p_k_usuarios_empresa");

                    b.HasIndex("EmpresaId", "Email")
                        .IsUnique();

                    b.HasIndex("EmpresaId", "Login")
                        .IsUnique();

                    b.ToTable("usuario_empresa", (string)null);
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.UsuarioSentinel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("criado_em");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_completo");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.Property<DateTime>("UltimaAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_alteracao");

                    b.HasKey("Id")
                        .HasName("p_k_usuarios_sentinel");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("usuario_sentinel", (string)null);
                });

            modelBuilder.Entity("PapelPermissao", b =>
                {
                    b.HasOne("Sentinel.Domain.Entities.Papel", null)
                        .WithMany()
                        .HasForeignKey("PapeisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_papel_permissao__papeis_papeis_id");

                    b.HasOne("Sentinel.Domain.Entities.Permissao", null)
                        .WithMany()
                        .HasForeignKey("PermissoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_papel_permissao__permissoes_permissoes_id");
                });

            modelBuilder.Entity("PapelUsuarioEmpresa", b =>
                {
                    b.HasOne("Sentinel.Domain.Entities.Papel", null)
                        .WithMany()
                        .HasForeignKey("PapeisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_papel_usuario_empresa__papeis_papeis_id");

                    b.HasOne("Sentinel.Domain.Entities.UsuarioEmpresa", null)
                        .WithMany()
                        .HasForeignKey("UsuariosEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_papel_usuario_empresa__usuarios_empresa_usuarios_empresa_id");
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.Contrato", b =>
                {
                    b.HasOne("Sentinel.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Contratos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_contratos__empresas_empresa_id");

                    b.HasOne("Sentinel.Domain.Entities.Plano", "Plano")
                        .WithMany("Contratos")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_contratos__planos_plano_id");

                    b.Navigation("Empresa");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.UsuarioEmpresa", b =>
                {
                    b.HasOne("Sentinel.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_usuarios_empresa_empresas_empresa_id");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Contratos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Sentinel.Domain.Entities.Plano", b =>
                {
                    b.Navigation("Contratos");
                });
#pragma warning restore 612, 618
        }
    }
}
